<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
			 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
			 x:Class="AlarmApp.Pages.AlarmListPage"
			 xmlns:local="clr-namespace:AlarmApp.Views"
			 xmlns:converters="clr-namespace:AlarmApp.Converters">
	<ContentPage.ToolbarItems>
		<ToolbarItem Text="New alarm" Icon="add_new" Command="{Binding NewAlarmCommand}"/>
	</ContentPage.ToolbarItems>
	<ContentPage.Resources>
		<ResourceDictionary>
			<converters:CountToBoolConverter x:Key="CountToBoolConverter"/>
		</ResourceDictionary>
	</ContentPage.Resources>
	<ContentPage.Content>
		<Grid>
			<ListView x:Name="listView" 
					  ItemsSource="{Binding Alarms}" 
					 HasUnevenRows="true"
					  SelectedItem="{Binding SelectedAlarm}" 
					  ItemSelected="Handle_ItemSelected" 
					  SeparatorColor="{StaticResource SeparatorColor}">					  
				<!--IsGroupingEnabled="true"
					  GroupDisplayBinding="{Binding Title}"-->
				<ListView.ItemTemplate>
					<DataTemplate>
						<local:AlarmListCell Height="150">
							<local:AlarmListCell.ContextActions>
								<MenuItem Icon="delete.png" Text="Delete" Command="{Binding Source={x:Reference listView}, Path=BindingContext.DeleteAlarmCommand}" CommandParameter="{Binding .}" IsDestructive="true"/>
							</local:AlarmListCell.ContextActions>
						</local:AlarmListCell>
					</DataTemplate>
				</ListView.ItemTemplate>
<!--				<ListView.GroupHeaderTemplate>
					<DataTemplate>
						<ViewCell Height="60">
							<ViewCell.View>
								<Label Text="{Binding Title}" Margin="20, 0, 0, 0" VerticalOptions="Center" TextColor="White" FontSize="20"/>
							</ViewCell.View>
						</ViewCell>
					</DataTemplate>
				</ListView.GroupHeaderTemplate>
-->			</ListView>
			<Label Text="No alarms!" VerticalOptions="Center" HorizontalOptions="Center" InputTransparent="true">
				<Label.Triggers>
					<!-- If we have 0 items, show the label -->
					<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference listView}, Path=ItemsSource.Count}" Value="0">
						<Setter Property="IsVisible" Value="true"/>
					</DataTrigger>
					<!-- If we have items, hide the label -->
					<DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference listView}, Path=ItemsSource.Count, Converter={StaticResource CountToBoolConverter}}" Value="true">
						<Setter Property="IsVisible" Value="false"/>
					</DataTrigger>
				</Label.Triggers>
			</Label>
		</Grid>
	</ContentPage.Content>
</ContentPage>
